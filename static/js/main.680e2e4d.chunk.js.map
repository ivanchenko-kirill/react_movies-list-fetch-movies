{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","FindMovie","props","onAdd","useState","newMovie","setNewMovie","searchQuery","setSearchQuery","isFound","setIsFound","getMovieFromServer","a","fetch","then","response","ok","Error","status","statusText","json","data","Response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","disabled","key","App","setMovies","find","film","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.680e2e4d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/api';\n\ninterface Props {\n  onAdd: (movie: Movie | null) => void;\n}\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { onAdd } = props;\n  const [newMovie, setNewMovie] = useState(null as Movie | null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isFound, setIsFound] = useState(true);\n\n  const getMovieFromServer = async () => {\n    const data = await request(searchQuery);\n\n    if (data.Response === 'False') {\n      setIsFound(false);\n      setNewMovie(null);\n\n      return;\n    }\n\n    setIsFound(true);\n    setNewMovie({\n      title: data.Title,\n      description: data.Plot,\n      imgUrl: data.Poster,\n      imdbId: data.imdbID,\n      imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n    });\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': !isFound })}\n              value={searchQuery}\n              onChange={({ target }: React.ChangeEvent<HTMLInputElement>) => {\n                setSearchQuery(target.value);\n                setIsFound(true);\n              }}\n            />\n          </div>\n\n          {!isFound\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovieFromServer}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!newMovie}\n              onClick={() => {\n                onAdd(newMovie);\n                setNewMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {newMovie && (\n          <MovieCard {...newMovie} key={newMovie.imdbId} />\n        )}\n      </div>\n    </>\n  );\n};\n","const BASE_URL = 'http://www.omdbapi.com/?apikey=eb01c610&';\n\nexport const request = (title: string): Promise<MovieFromServer> => {\n  return fetch(`${BASE_URL}&t=${title}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addNewMovie = (movie: Movie | null) => {\n    if (movie && !movies.find(film => film.imdbId === movie.imdbId)) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}